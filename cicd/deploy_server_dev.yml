name: Deploy Server Development

on:
  push:
    branches: [develop]

jobs:
  deploy_development:
    runs-on: ubuntu-18.04
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull App Image From ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: keeper-homepage-app
        run: docker pull $ECR_REGISTRY/keeper-homepage-app:${{ secrets.KEEPER_APP_TAG }}

      - name: Pull DB Image From ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: keeper-homepage-db
        run: docker pull $ECR_REGISTRY/keeper-homepage-db:${{ secrets.KEEPER_DB_TAG }}

      - name: Create Env File
        working-directory: ./docker
        run: |
          touch .env
          echo "${{ secrets.DOCKER_ENV }}" >> .env
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> .env

      - name: Start Containers
        working-directory: ./docker
        run: docker-compose -p keeper up -d

      - name: Build & Compress JAR
        run: |
          echo "Building... Please Wait..."
          sleep 5

          while [ $(docker ps -q -f name=app) ];
          do
            sleep 1
          done

          if [ ! -d "application" ]
          then
            exit 1
          fi

          echo "Compression Success!"
          sleep 5
          tar -zcvf ${{ github.sha::8 }}.tar.gz \
            dependencies \
            snapshot-dependencies \
            spring-boot-loader \
            application

      - name: Update Test Result
        if: failure()
        run: |
          aws s3 cp --region ap-northeast-2 --recursive \
          build/reports/tests/test \
          ${{ secrets.S3_TEST_REPORT }}

      - name: Upload to S3
        run: |
          aws s3 mv --region ap-northeast-2 \
          ${{ github.sha::8 }}.tar.gz \
          ${{ secrets.S3_DEV_BACK_LOCATION }}/${{ github.sha::8 }}.tar.gz

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          script: |
            cd ~/keeper
            ./deploy_back.sh ${{ github.sha::8 }}
