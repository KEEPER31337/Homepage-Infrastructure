limit_req_zone $binary_remote_addr zone=keeper_req:10m rate=15r/s;
limit_req_status 429;
limit_conn_zone $binary_remote_addr zone=keeper_conn:10m;

upstream spring {
	server app:8080;
}

upstream socket {
	server 152.67.211.58:3002;
}

upstream wiki {
	server wiki:3001;
}

server {
	# server_name keeper.or.kr;
	root html;

	location / {
    	   return 301 https://keeper.or.kr$request_uri;
  	}
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	charset utf-8;

	access_log /home/keeper/access.log;
	error_log /home/keeper/error.log;

	server_name keeper.or.kr www.keeper.or.kr;
	server_tokens off;

	autoindex off;

	ssl_certificate /etc/letsencrypt/live/keeper.or.kr/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/keeper.or.kr/privkey.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

	location / {
	 	root /home/keeper/front;
		index index.html index.htm;
		try_files $uri /index.html;
		add_header Content-Security-Policy 'upgrade-insecure-requests';

		limit_req zone=keeper_req burst=10 nodelay;
		limit_conn keeper_conn 10;
		limit_req_log_level error;
	}

	location /.well-known/acme-challenge {
		allow all;
		root /home/keeper/front;
	}

	location /v1 {
		proxy_pass http://spring;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		add_header 'Access-Control-Allow-Origin' '*';
	}

	location /socket.io {
		proxy_pass http://socket;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header X-NginX-Proxy false;
		proxy_redirect off;
		proxy_set_header Connection 'upgrade';
	}

	location /wiki {
		proxy_pass http://wiki;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
	}

#	location ~* \.(jpg|jpeg|png|gif|ico|css|js|eot|ttf|woff|wodd2)$ {
#		expires 1M;
#		add_header Cache-Control 'public';
#		add_header Access-Control-Allow-Origin '*';
#		access_log off;
#	}
}

