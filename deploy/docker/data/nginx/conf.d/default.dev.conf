limit_req_zone $binary_remote_addr zone=keeper_req:10m rate=30r/s;
limit_req_status 429;
limit_conn_zone $binary_remote_addr zone=keeper_conn:10m;

upstream spring {
    server app:8080;
}

upstream socket {
    server 144.24.64.91:3002;
}

server {
    listen 80;
    listen [::]:80;

    charset utf-8;

    access_log /home/keeper/access.log;
    error_log /home/keeper/error.log;

    server_name _;
    server_tokens off;

    autoindex off;

    location / { 
        root /home/keeper/front;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;

        limit_req zone=keeper_req burst=10 nodelay;
        limit_conn keeper_conn 10;
        limit_req_log_level error;
    }

    location /v1 {
        proxy_pass http://spring;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_hide_header Access-Control-Allow-Origin;
        add_header 'Access-Control-Allow-Origin' '*';
    }


    location /docs {
        proxy_pass http://spring;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header 'Access-Control-Allow-Origin' '*';
    }

    location /actuator {
        allow 152.69.233.130;
        deny all;

        proxy_pass http://spring$uri$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /socket.io {
        proxy_pass http://socket;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-NginX-Proxy false;
        proxy_redirect off;
        proxy_set_header Connection 'upgrade';
    }

    location /wiki/ {
        proxy_pass http://wiki;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
